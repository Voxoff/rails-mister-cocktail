<h1>Mood</h1>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.6.1/react-dom.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.29/browser-polyfill.min.js"></script>
<body>

<%= javascript_include_tag "application" %>
<%= javascript_pack_tag "application" %>
<div id="sapphire-app">
</div>
</body>
<script>
class BSApp extends React.Component {
  state = {ginDrinks: [], currentIndex: null, currentRecipe: null};
  constructor(props) {
    super(props);
    this.renderGinDrinks = this.renderGinDrinks.bind(this);
    this.closeModal = this.closeModal.bind(this);
  }
  closeModal(e) {
    if (e != undefined) {
      e.preventDefault();
    }
    this.setState({ currentIndex: null, currentRecipe: null });
  }
  async getGinDrinks() {
    const res = await fetch("https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=Gin").then(res => res.json());
    this.setState({ginDrinks: res.drinks});
  }
  async openModal(e, index, idDrink) {
    const recipeRes = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idDrink}`).then(res => res.json());
    this.setState({currentIndex: index, currentRecipe: recipeRes.drinks[0]})
  }
  renderGinDrinks(drink, index) {
    const {idDrink, strDrinkThumb, strDrink} = drink;
    return (
      <div className="drink" id={idDrink} onClick={(e) => this.openModal(e, index, idDrink)}>
        <figure>
          <img src={strDrinkThumb} />
          <figcaption>
            {strDrink}
          </figcaption>
        </figure>
      </div>
    )
  }
  componentDidMount() {
    this.getGinDrinks()
  }
  render() {
    return (
      <div className='appContainer'>
        <h1>Sapphire Cocktails</h1>
        <main className='drinkContainer'>
          {this.state.ginDrinks.map(this.renderGinDrinks)}
          <GinModal closeModal={this.closeModal}
                    recipe={this.state.currentRecipe}
            />
        </main>
      </div>
    )
  }
}

class GinModal extends React.Component {
  render() {
    if (!this.props.recipe) {
      return null;
    }
    const {closeModal, recipe} = this.props;
    const {strDrink, strDrinkThumb, strInstructions, strIngredient2, strIngredient3} = recipe;
    return (
      <div>
        <div className="modal-overlay" onClick={closeModal}></div>
        <div className="modal">
          <a href="#" className='modal-close' onClick={closeModal} onKeyDown={this.handleKeyDown}>&times;</a>
          <div className="modal-body">
            <div className="modal-img">
              <img src={strDrinkThumb} />
            </div>
            <div className="modal-text">
              <h2>{strDrink}</h2>
              <strong>Ingredients:</strong>
              <ul>
                <li>{strIngredient2}</li>
                <li>{strIngredient3}</li>
              </ul>
              <strong>Instructions:</strong>
              <p>{strInstructions}</p>
            </div>
          </div>
        </div>
      </div>
    )
  }
}

ReactDOM.render(
  <BSApp />,
  document.getElementById('sapphire-app')
)
</script>


